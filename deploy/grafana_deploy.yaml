---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  namespace: kube-system
spec:
  replicas: 1
  serviceName: monitoring-grafana
  selector:
    matchLabels:
      k8s-app: grafana
  template:
    metadata:
      labels:
        k8s-app: grafana
    spec:
      initContainers:
        - name: prometheus-data-permission-fix
          image: busybox
          command: ["/bin/chmod","-R","777", "/var/lib/grafana"]
          volumeMounts:
            - name: data
              mountPath: /var/lib/grafana
      containers:
        - name: grafana
          image:  knightxun/grafana:dev
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              protocol: TCP
          env:
            - name: CLOUD_HTTP_URL
              value: http://172.20.26.98:8880/xxxxx/
            - name: NEBULA_NAMESPACE
              value: nebula-monitor
            - name: GF_SERVER_HTTP_PORT
              value: "3000"
            - name: GF_AUTH_BASIC_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: Admin
            - name: GF_SERVER_ROOT_URL
              value: /
          volumeMounts:
            - name: data
              mountPath: /var/lib/grafana
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
        storageClassName: alicloud-disk-efficiency
        volumeMode: Filesystem

---
apiVersion: v1
kind: Service
metadata:
  labels:
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: monitoring-grafana
  name: monitoring-grafana
  namespace: kube-system
spec:
  type: LoadBalancer
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    k8s-app: grafana
